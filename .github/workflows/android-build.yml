name: Android Build & Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # If building a release (either from a tag or manually triggered)
      - name: Decode Keystore
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.build_type == 'release'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ./app/moneypulse.keystore
          echo "storeFile=./moneypulse.keystore" > ./keystore.properties

      # Debug Build
      - name: Build Debug APK
        if: "!startsWith(github.ref, 'refs/tags/v') && (github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '')"
        run: ./gradlew assembleDebug

      # Release Build (Bundle for Play Store)
      - name: Build Release Bundle
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.build_type == 'release'
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew bundleRelease

      # Universal APK for direct installs (still using release signing)
      - name: Build Release APK
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.build_type == 'release'
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      # Upload Debug APK
      - name: Upload Debug APK
        if: "!startsWith(github.ref, 'refs/tags/v') && (github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '')"
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      # Upload Release Bundle
      - name: Upload Release Bundle
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.build_type == 'release'
        uses: actions/upload-artifact@v3
        with:
          name: app-release-bundle
          path: app/build/outputs/bundle/release/app-release.aab

      # Upload Release APK
      - name: Upload Release APK
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.build_type == 'release'
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

      # Create GitHub Release with assets
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            app/build/outputs/bundle/release/app-release.aab
            app/build/outputs/apk/release/app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          prerelease: contains(github.ref, 'beta') || contains(github.ref, 'alpha')
          draft: false 